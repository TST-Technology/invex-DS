{"version":3,"sources":["components/CallsAndPuts2/MainTable.js","components/CallsAndPuts2/Controls.js","components/CallsAndPuts2/MoreInfo.js","components/CallsAndPuts2/index.js","assets/logo.svg","components/InvexAppBar/InvexAppBar.js","components/Graph/CustomChart.js","components/Graph/Graph.js","components/Graph/CustomChartMAxis.js","components/TableGraph/TableGraph.js","components/PredictData/PredictData.js","App.js","reportWebVitals.js","index.js"],"names":["MainTable","companies","columns","theme","createTheme","responsiveFontSizes","ThemeProvider","data","options","selectableRows","className","Controls","handleSubmit","useState","Date","toISOString","substring","date","setDate","monthInput","setMonthInput","strikeInput","setStrikeInput","callRange","setCallRange","putRange","setputRange","CPRange","setCPRange","filterDays","setFilterDays","handleCallRangeChange","value","handlePutRangeChange","handleCPRangeChange","Fragment","style","overflow","type","onChange","e","target","width","htmlFor","Slider","sx","color","min","max","id","Box","step","Select","labelId","label","marginTop","padding","MenuItem","onClick","position","top","left","transform","bgcolor","boxShadow","p","MoreInfo","showMoreDetails","handleCloseModal","Modal","open","show","class","cursor","Typography","variant","component","scope","Object","entries","map","key","toFixed","name","Index","setCompanies","isDataLoaded","setDataLoaded","loading","setLoading","setShowMoreDetails","handleShowMore","getData","body","a","fetch","process","method","headers","res","console","log","text","json","replace","jsonOP","JSON","parse","op","value2","push","company_name","call_ir","Number","put_ir","cp_ratio","hvtf","action","createPortal","document","getElementById","role","InvexAppBar","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","Container","backgroundColor","maxWidth","Toolbar","disableGutters","noWrap","mr","display","xs","md","src","logo","alt","flexGrow","IconButton","size","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","to","textAlign","Button","my","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CustomChart","responsive","plugins","legend","title","scales","y","gridlines","x","ticks","autoSkip","maxRotation","minRotation","labels","chartLables","datasets","dataSets","justifyContent","Graph","useTheme","filterCompanyType","setFilterCompanyType","defSelected","selectedCompanyName","setSelectedCompanyName","graphData","setGraphData","companyNameData","setCompanyNameData","colors","setColors","setChartLables","setDataSets","dataSetsChange","setDataSetsChange","getStyles","comName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useEffect","axios","get","then","response","localCompName","keys","localColors","forEach","lable","r","Math","floor","random","g","b","expiration","catch","err","alert","lables","n","length","localDataSet","localDataSetChange","sell","i","mid","borderColor","mid_change","TextField","newValue","select","FormControl","m","InputLabel","split","multiple","input","OutlinedInput","renderValue","selected","flexWrap","gap","Chip","onDelete","preventDefault","current","_without","handleChipDelete","deleteIcon","fill","onMouseDown","stopPropagation","MenuProps","PaperProps","maxHeight","CustomChartMAxis","interaction","mode","intersect","stacked","y1","grid","drawOnChartArea","TableGraph","companieData","setCompanieData","showChart","setShowChart","circularProgress","setCircularProgress","sortCompare","order","obj1","obj2","parseInt","r1","g1","b1","localData","option_symbol","table","invex_ration","toPrecision","date_of_expiration","last_percentage_change","yAxisID","Dialog","background","CircularProgress","margin","PredictData","ticker","setTicker","percentage","setPercentage","setOpen","openBackDrop","setOpenBackDrop","errMsg","setErrMsg","predictData","setPredictData","dataLoaded","timePeriod","setTimePeriod","handleClose","reason","unSelected","changeFloat","parseFloat","marginLeft","endAdornment","InputAdornment","inputProps","post","ButtonGroup","orientation","disableRipple","List","border","borderRadius","ListItem","ListItemText","primary","secondary","Divider","flexItem","flex","marginRight","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","Backdrop","zIndex","drawer","Snackbar","autoHideDuration","TransitionComponent","Grow","Alert","severity","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c9058a5.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@mui/material'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport React from 'react'\r\n\r\nfunction MainTable ({ companies, columns }) {\r\n  let theme = createTheme()\r\n  theme = responsiveFontSizes(theme)\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <MUIDataTable\r\n        data={companies}\r\n        columns={columns}\r\n        options={{ selectableRows: false }}\r\n        className='my-2'\r\n      />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default MainTable\r\n","import { Box, Slider, Select, MenuItem } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Controls ({ handleSubmit }) {\r\n  const [date, setDate] = useState(\r\n    new Date(2021,11,14).toISOString().substring(0, 10)\r\n  )\r\n  const [monthInput, setMonthInput] = useState(100)\r\n  const [strikeInput, setStrikeInput] = useState(20)\r\n  const [callRange, setCallRange] = useState([0.5, 20])\r\n  const [putRange, setputRange] = useState([0.5, 50])\r\n  const [CPRange, setCPRange] = useState([0.5, 20])\r\n  const [filterDays, setFilterDays] = useState(\"180\");\r\n\r\n  const handleExpiration = e => {\r\n    setMonthInput(e.target.value)\r\n  }\r\n\r\n  const handleStrikeChange = e => {\r\n    setStrikeInput(e.target.value)\r\n  }\r\n\r\n  const handleDateChange = e => {\r\n    setDate(e.target.value)\r\n  }\r\n\r\n  const handleCallRangeChange = value => {\r\n    setCallRange(value)\r\n  }\r\n  \r\n  const handlePutRangeChange = value => {\r\n    setputRange(value)\r\n  }\r\n\r\n  const handleCPRangeChange = value => {\r\n    setCPRange(value)\r\n  }\r\n\r\n  const handleFilterDaysChange = e => {\r\n    setFilterDays(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className='card flex-wrap d-flex flex-row justify-content-between my-2'\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <div className=' card d-flex flex-row flex-wrap align-items-center justify-content-between w-100 p-4'>\r\n          <p className='my-auto fw-bolder'>Expiration</p>\r\n          <input\r\n            type='number'\r\n            value={monthInput}\r\n            onChange={handleExpiration}\r\n            className='mx-2 form-control my-auto '\r\n            style={{ width: '100px' }}\r\n          />\r\n          <p className='my-auto mx-2 fw-bolder'>Strike</p>\r\n          <div className='d-flex flex-column align-items-start p-3'>\r\n            <label htmlFor='myinputRange' className='form-label mx-2 my-0 mt-2'>\r\n              {strikeInput}\r\n            </label>\r\n            <Slider\r\n              aria-label='Strike'\r\n              value={strikeInput}\r\n              onChange={handleStrikeChange}\r\n              sx={{\r\n                color: '#0f062b'\r\n              }}\r\n              min={0}\r\n              max={100}\r\n              id='myinputRange'\r\n              style={{ width: '100px' }}\r\n            />\r\n          </div>\r\n          <p className='my-auto mx-2 fw-bolder'>Date</p>\r\n          <input\r\n            type='date'\r\n            className='mx-2 form-control my-auto w-auto'\r\n            value={date}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className='flex-wrap d-flex flex-row justify-content-between my-2 card'\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <div className=' card d-flex flex-row flex-wrap align-items-center justify-content-between w-100 p-4'>\r\n          <Box sx={{ width: 150 }} className='mx-2 '>\r\n            <p className='mx-2 my-auto fw-bolder'>Call Range</p>\r\n            <div className='d-flex flex-row my-1 justify-content-center'>\r\n              <div className='d-flex flex-column  mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={callRange[0]}\r\n                  onChange={e => {\r\n                    handleCallRangeChange([e.target.value, callRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column  mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={callRange[1]}\r\n                  onChange={e => {\r\n                    handleCallRangeChange([callRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2'>\r\n            <p className='my-auto mx-2 fw-bolder'>Put Range</p>\r\n            <div className='d-flex flex-row my-1'>\r\n              <div className='d-flex flex-column align-items-start mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={putRange[0]}\r\n                  onChange={e => {\r\n                    handlePutRangeChange([e.target.value, putRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column align-items-start mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={putRange[1]}\r\n                  onChange={e => {\r\n                    handlePutRangeChange([putRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2'>\r\n            <p className='my-auto mx-2 fw-bolder'>CP Range</p>\r\n            <div className='d-flex flex-row my-1'>\r\n              <div className='d-flex flex-column align-items-start mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={CPRange[0]}\r\n                  onChange={e => {\r\n                    handleCPRangeChange([e.target.value, CPRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column align-items-start mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={CPRange[1]}\r\n                  onChange={e => {\r\n                    handleCPRangeChange([CPRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2 '>\r\n            <p className='my-auto mx-2 fw-bolder'>Filter Days</p>\r\n            {/* <InputLabel id=\"demo-simple-select-label\">Filter Days</InputLabel> */}\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={filterDays}\r\n              label=\"Age\"\r\n              onChange={handleFilterDaysChange}\r\n              sx={{marginTop:1, padding:0}}\r\n            >\r\n              <MenuItem value={\"180\"}>6 Months</MenuItem>\r\n              <MenuItem value={\"720\"}>2 Years</MenuItem>\r\n              <MenuItem value={\"max\"}>MAX</MenuItem>\r\n            </Select>\r\n          </Box>\r\n\r\n          <button\r\n            className='my_button my-auto w-auto'\r\n            onClick={() => {\r\n              handleSubmit(\r\n                `{\r\n                  \"month\":\"${monthInput}\",\r\n                  \"strike_percent\":\"${strikeInput}\",\r\n                  \"date\":\"${date}\",\r\n                  \"call_value\":\"${callRange[0]}_${callRange[1]}\",\r\n                  \"put_value\":\"${putRange[0]}_${putRange[1]}\",\r\n                  \"cp_value\":\"${CPRange[0]}_${CPRange[1]}\",\r\n                  \"filter_days\":\"${filterDays}\"\r\n                }`\r\n              )\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import { Modal, Typography, Box } from '@mui/material'\r\nimport React from 'react'\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4\r\n}\r\nfunction MoreInfo ({ showMoreDetails, handleCloseModal }) {\r\n  return (\r\n    <Modal\r\n      open={showMoreDetails.show}\r\n      aria-labelledby='modal-modal-title'\r\n      aria-describedby='modal-modal-description'\r\n      style={{ overflow: 'scroll' }}\r\n    >\r\n      <div>\r\n        <Box sx={{ ...style, width: 800 }}>\r\n          <div class='text-end' style={{ cursor: 'pointer' }}>\r\n            <i class='fas fa-times' onClick={handleCloseModal}></i>\r\n          </div>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            {`${showMoreDetails.data['key']}`}\r\n          </Typography>\r\n          <div class='table-responsive shadow-lg p-3 my-3'>\r\n            <table class='table'>\r\n              <thead>\r\n                <tr>\r\n                  <td scope='col'>Expiration Date</td>\r\n                  <td scope='col'>Call IR</td>\r\n                  <td scope='col'>Put IR</td>\r\n                  <td scope='col'>CP Ratio</td>\r\n                  <td scope='col'>HVTF</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(showMoreDetails.data['value']).map(\r\n                  ([key, value]) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{key}</td>\r\n                        <td>{value[0].toFixed(2)}</td>\r\n                        <td>{value[1].toFixed(2)}</td>\r\n                        <td>{value[2].toFixed(2)}</td>\r\n                        <td>{value[3].toFixed(2)}</td>\r\n                      </tr>\r\n                    )\r\n                  }\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <button onClick={handleCloseModal} class='btn btn-danger'>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MoreInfo\r\n","import React, { useState } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport \"./index.css\"\r\nimport MainTable from './MainTable'\r\nimport Controls from './Controls'\r\nimport MoreInfo from './MoreInfo'\r\n\r\nconst columns = [\r\n  { name: 'company_name', label: 'Company name' },\r\n  { name: 'call_ir', label: 'Call IR' },\r\n  { name: 'put_ir', label: 'Put IR' },\r\n  { name: 'cp_ratio', label: 'CP ratio' },\r\n  { name: 'hvtf', label: 'HVTF' },\r\n  { name: 'action', label: 'See More' }\r\n]\r\n\r\nfunction Index () {\r\n  const [companies, setCompanies] = useState([])\r\n  const [isDataLoaded, setDataLoaded] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [showMoreDetails, setShowMoreDetails] = useState({\r\n    show: false,\r\n    data: {}\r\n  })\r\n\r\n  const handleShowMore = (key, value) => {\r\n    setShowMoreDetails({ show: true, data: { key: key, value: { ...value } } })\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setShowMoreDetails({\r\n      show: false,\r\n      data: {}\r\n    })\r\n  }\r\n\r\n  const handleSubmit = body => {\r\n    getData(body)\r\n  }\r\n\r\n  const getData = async body => {\r\n    try {\r\n      setLoading(true)\r\n      setDataLoaded(true)\r\n\r\n      const res = await fetch(process.env.REACT_APP_BASE_URL+`/total`, {\r\n        method: 'POST',\r\n        body: body,\r\n\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      console.log(body)\r\n      let json = await res.text()\r\n      json = json.replace(/\\bNaN\\b/g, null)\r\n      json = json.replace(/\\bInfinity\\b/g, null)\r\n      console.log('Output: ', json)\r\n      let jsonOP = JSON.parse(json)\r\n      let op = []\r\n      Object.entries(jsonOP).map(([key, value]) => {\r\n        let value2 = value['total']\r\n        op.push({\r\n          company_name: key,\r\n          call_ir: value2[0] ? Number(value2[0].toFixed(2)) : '-',\r\n          put_ir: value2[1] ? Number(value2[1].toFixed(2)) : '-',\r\n          cp_ratio: value2[2] ? Number(value2[2].toFixed(2)) : '-',\r\n          hvtf: value2[3] ? Number(value2[3].toFixed(2)) : '-',\r\n          action: (\r\n            <button\r\n              class='btn btn-outline-success'\r\n              onClick={() => {\r\n                handleShowMore(key, value)\r\n              }}\r\n            >\r\n              <i class='fa fa-arrow-right' aria-hidden='true'></i>\r\n            </button>\r\n          )\r\n        })\r\n        return ''\r\n      })\r\n      setCompanies(op)\r\n    } catch (e) {\r\n      console.log(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main'>\r\n      <section className='company_details'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {showMoreDetails.show\r\n              ? createPortal(\r\n                  <MoreInfo\r\n                    showMoreDetails={showMoreDetails}\r\n                    handleCloseModal={handleCloseModal}\r\n                  />,\r\n                  document.getElementById('loading_modal')\r\n                )\r\n              : null}\r\n\r\n            <div className='col-12'>\r\n              <Controls handleSubmit={handleSubmit} />\r\n              {loading ? (\r\n                <div class='d-flex justify-content-center align-items-center'>\r\n                  <div class='spinner-border text-primary' role='status'>\r\n                    <span class='visually-hidden'>Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : isDataLoaded != 0 ? (\r\n                <MainTable companies={companies} columns={columns} />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","export default __webpack_public_path__ + \"static/media/logo.e1690405.svg\";","import * as React from 'react';\r\nimport \"./InvexAppBar.css\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst InvexAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container sx={{backgroundColor:\"#0f062b\"}} maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            <img src={logo} alt=\"Invex Wealth\" />\r\n          </Typography>\r\n          \r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              <Link to=\"/\">\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Home</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n              <Link to=\"/graph\">\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Graph</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n              <Link to=\"/comp-graph\">\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Compare Graph</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            <img src={logo} alt=\"Invex Wealth\" />\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <Link to=\"/\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Home\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/graph\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Graph\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/comp-graph\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Compare Graph\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/predict-data\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Predict Data\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n\r\n          {/* <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box> */}\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default InvexAppBar;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst CustomChart = ({title, chartLables, dataSets}) => {\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: title,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        gridlines: {\r\n          color: 'red'\r\n        },\r\n      },\r\n      x: {\r\n        ticks: {\r\n            autoSkip: false,\r\n            maxRotation: 90,\r\n            minRotation: 0\r\n        }\r\n      },\r\n    }\r\n  };\r\n\r\n  // console.log(chartLables);\r\n  // console.log(dataSets);\r\n\r\n  const data = {\r\n    labels:chartLables,\r\n    datasets: dataSets,\r\n  };\r\n\r\n  return (\r\n    <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4 mt-4 mb-2'>\r\n      <Line options={options} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, MenuItem, TextField, Select, useTheme, OutlinedInput, Chip, FormControl, InputLabel } from '@mui/material'\r\nimport axios from 'axios';\r\nimport CustomChart from './CustomChart.js';\r\n\r\nimport _without from \"lodash/without\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\n\r\nconst Graph = () => {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [filterCompanyType, setFilterCompanyType] = useState(\"sell\");\r\n\r\n    const defSelected = \"All\"\r\n    const [selectedCompanyName, setSelectedCompanyName] = useState([defSelected]);\r\n    \r\n    const [graphData, setGraphData] = useState({});\r\n    const [companyNameData, setCompanyNameData] = useState([]);\r\n    // const [graphMidData, setGraphMidData] = useState({});\r\n    const [colors, setColors] = useState([]);\r\n    \r\n    const [chartLables, setChartLables] = useState([]);\r\n    const [dataSets, setDataSets] = useState([]);\r\n    const [dataSetsChange, setDataSetsChange] = useState([]);\r\n\r\n    const MenuProps = {\r\n        PaperProps: {\r\n          style: {\r\n            maxHeight: 48 * 4.5 + 8,\r\n            width: 250,\r\n            fontWeight: \"bold\"\r\n          },\r\n        },\r\n    };\r\n\r\n    function getStyles(name, comName, theme) {\r\n        return {\r\n            fontWeight:\r\n            comName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(process.env.REACT_APP_BASE_URL+\"/graph\")\r\n        .then(response => {\r\n            const data = response.data;\r\n            const localCompName = Object.keys(data[\"sell\"]);\r\n            \r\n            let localColors = {};\r\n            localCompName.forEach( (lable) => {\r\n                let r = Math.floor(Math.random()*255);\r\n                let g = Math.floor(Math.random()*255);\r\n                let b = Math.floor(Math.random()*255);\r\n                localColors[lable] = {r,g,b}\r\n            });\r\n            setColors(localColors);\r\n\r\n            setCompanyNameData(localCompName);\r\n            setChartLables(data[\"sell\"][localCompName[0]].expiration);\r\n            setGraphData(data);\r\n        })\r\n        .catch(err => {\r\n            alert(\"Some Error Occured !\");\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let lables = companyNameData;\r\n        let n = lables.length;\r\n        let localDataSet = [];\r\n        let localDataSetChange = [];\r\n        if(graphData.sell){\r\n            if(selectedCompanyName.indexOf(defSelected)!==-1){\r\n                for(let i=0; i<n; i++){\r\n                    localDataSet.push({\r\n                        label: lables[i],\r\n                        data: graphData[filterCompanyType][lables[i]].mid,\r\n                        borderColor: \"rgb(\"+colors[lables[i]].r+\",\"+colors[lables[i]].g+\",\"+colors[lables[i]].b+\")\",\r\n                        backgroundColor: \"rgba(\" + colors[lables[i]].r + \",\" + colors[lables[i]].g + \",\" + colors[lables[i]].b + \", 0.5)\"\r\n                    });\r\n                    localDataSetChange.push({\r\n                        label: lables[i]+\" Change %\",\r\n                        data: graphData[filterCompanyType][lables[i]].mid_change,\r\n                        borderColor: \"rgb(\"+colors[lables[i]].r+\",\"+colors[lables[i]].g+\",\"+colors[lables[i]].b+\")\",\r\n                        backgroundColor: \"rgba(\" + colors[lables[i]].r + \",\" + colors[lables[i]].g + \",\" + colors[lables[i]].b + \", 0.5)\"\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                selectedCompanyName.forEach( (comName)=>{\r\n                    localDataSet.push({\r\n                        label: comName,\r\n                        data: graphData[filterCompanyType][comName].mid,\r\n                        borderColor: \"rgb(\"+colors[comName].r+\",\"+colors[comName].g+\",\"+colors[comName].b+\")\",\r\n                        backgroundColor: \"rgba(\" + colors[comName].r + \",\" + colors[comName].g + \",\" + colors[comName].b + \", 0.5)\"\r\n                    });\r\n                    localDataSetChange.push({\r\n                        label: comName+\" Change %\",\r\n                        data: graphData[filterCompanyType][comName].mid_change,\r\n                        borderColor: \"rgb(\"+colors[comName].r+\",\"+colors[comName].g+\",\"+colors[comName].b+\")\",\r\n                        backgroundColor: \"rgba(\" + colors[comName].r + \",\" + colors[comName].g + \",\" + colors[comName].b + \", 0.5)\"\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        setDataSets(localDataSet);\r\n        setDataSetsChange(localDataSetChange)\r\n    }, [colors, companyNameData, graphData, selectedCompanyName, filterCompanyType]);\r\n    \r\n    const handleDataTypeChange = (e) => {\r\n        const newValue = e.target.value;\r\n        let localCompName = Object.keys(graphData[newValue]);\r\n\r\n        setFilterCompanyType(newValue);\r\n        setSelectedCompanyName([defSelected]);\r\n\r\n        let localColors = {};\r\n        localCompName.forEach( (lable) => {\r\n            let r = Math.floor(Math.random()*255);\r\n            let g = Math.floor(Math.random()*255);\r\n            let b = Math.floor(Math.random()*255);\r\n            localColors[lable] = {r,g,b}\r\n        });\r\n        setColors(localColors);\r\n\r\n        setCompanyNameData(localCompName);\r\n        setChartLables(graphData[newValue][localCompName[0]].expiration);\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setSelectedCompanyName(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    }\r\n\r\n    const handleChipDelete = (e, value) => {\r\n        e.preventDefault();\r\n        setSelectedCompanyName((current) => _without(current, value));\r\n    }\r\n\r\n    return (\r\n        <div className='container' style={{padding: \"50px 0 0\"}}>\r\n            <div className='offset-0 col-12'>\r\n                <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4'>\r\n                    <Box sx={{ width: 150 }} className='mx-2 '>\r\n                        <p className='my-auto mx-2 fw-bolder'>Data Type</p>\r\n                        <TextField\r\n                            value={filterCompanyType}\r\n                            onChange={handleDataTypeChange}\r\n                            select\r\n                            sx={{marginTop:1, padding:0, width:\"100%\"}}\r\n                        >\r\n                                <MenuItem value=\"sell\">Sell</MenuItem>\r\n                                <MenuItem value=\"buy\">Buy</MenuItem>\r\n                        </TextField>\r\n                    </Box>\r\n\r\n                    <Box className='mx-2 '>\r\n                        <p className='my-auto mx-2 fw-bolder'>Company Name</p>\r\n                        <FormControl sx={{ m: 1, width: 500 }}>\r\n                            <InputLabel id=\"company\">Company</InputLabel>\r\n                            <Select\r\n                                labelId=\"company\"\r\n                                value={selectedCompanyName}\r\n                                onChange={handleNameChange}\r\n                                multiple\r\n                                input={<OutlinedInput id=\"company\" label=\"Company\" />}\r\n                                renderValue={(selected) => (\r\n                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                        {selected.map((value) => (\r\n                                            <Chip \r\n                                                key={value} \r\n                                                label={value} \r\n                                                onDelete={(e) => handleChipDelete(e, value)}\r\n                                                sx = {{ color:\"white\", backgroundColor:\"#0f062b\" }}\r\n                                                deleteIcon={\r\n                                                    <CancelIcon\r\n                                                        style={{fill:\"white\"}}\r\n                                                        onMouseDown={(event) => event.stopPropagation()}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        ))}\r\n                                    </Box>\r\n                                )}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                <MenuItem\r\n                                    value={ defSelected }\r\n                                    style={getStyles(defSelected, selectedCompanyName, theme)}\r\n                                >\r\n                                    { defSelected }\r\n                                </MenuItem>\r\n                                {\r\n                                    companyNameData.map(name => {\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={name}\r\n                                                value={name}\r\n                                                style={getStyles(name, selectedCompanyName, theme)}\r\n                                            >\r\n                                                {name}\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n\r\n                    {/* <button\r\n                        className='my_button my-auto w-auto'\r\n                        onClick={() => alert(JSON.stringify({\"Data\": filterCompanyType, \"Company\": filterCompanyName}))}\r\n                    >\r\n                        Submit\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n            <CustomChart title=\"Invex Chart\" chartLables={chartLables} dataSets={dataSets} />\r\n            <CustomChart title=\"Invex Chart Change %\" chartLables={chartLables} dataSets={dataSetsChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst CustomChartMAxis = ({chartLables, dataSets}) => {\r\n\r\n  const options = {\r\n    responsive: true,\r\n    interaction: {\r\n        mode: 'index',\r\n        intersect: false,\r\n    },\r\n    stacked: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Invex Chart',\r\n      },\r\n    },\r\n    scales: {\r\n        y: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'left',\r\n        },\r\n        y1: {\r\n            type: 'linear',\r\n            display: true,\r\n            position: 'right',\r\n\r\n            grid: {\r\n                drawOnChartArea: false,\r\n            },\r\n        },\r\n        x: {\r\n            ticks: {\r\n                autoSkip: false,\r\n                maxRotation: 90,\r\n                minRotation: 0\r\n            }\r\n        },\r\n    }\r\n  };\r\n\r\n  // console.log(chartLables);\r\n  // console.log(dataSets);\r\n\r\n  const data = {\r\n    labels:chartLables,\r\n    datasets: dataSets,\r\n  };\r\n\r\n  return (\r\n    <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4 mt-4 mb-2'>\r\n      <Line options={options} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomChartMAxis;\r\n","import { Box, CircularProgress, createTheme, Dialog, MenuItem, Modal, responsiveFontSizes, TextField } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport axios from 'axios';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CustomChartMAxis from '../Graph/CustomChartMAxis';\r\n\r\nconst TableGraph = () => {\r\n\r\n    const [filterCompanyType, setFilterCompanyType] = useState(\"sell\");\r\n    const [companieData, setCompanieData] = useState([]);\r\n\r\n    const [showChart, setShowChart] = useState(false);\r\n    const [chartLables, setChartLables] = useState([]);\r\n    const [dataSets, setDataSets] = useState([]);\r\n\r\n    const [graphData, setGraphData] = useState({});\r\n\r\n    const [circularProgress, setCircularProgress] = useState(false);\r\n\r\n    let theme = createTheme();\r\n    theme = responsiveFontSizes(theme);\r\n\r\n    const columns = [\r\n        { name: 'option_symbol', label: 'Option Symbol' },\r\n        { \r\n            name: 'invex_ration', \r\n            label: 'Invex Ration',\r\n            options: {\r\n                sortCompare: (order) => {\r\n                  return (obj1, obj2) => {\r\n                    let val1 = parseInt(obj1.data, 10);\r\n                    let val2 = parseInt(obj2.data, 10);\r\n                    return (val1 - val2) * (order === 'asc' ? 1 : -1);\r\n                  };\r\n                }\r\n            }\r\n        },\r\n        { name: 'date_of_expiration', label: 'Date Of Expiration' },\r\n        { name: 'type', label: 'Type' },\r\n        { name: 'last_percentage_change', label: 'Last Percentage Change' },\r\n        { name: 'action', label: 'See More' }\r\n    ];\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 24,\r\n        p: 4\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCircularProgress(true);\r\n        axios.get(process.env.REACT_APP_BASE_URL+\"/graph\")\r\n        .then(response => {\r\n            const data = response.data;\r\n            console.log(data);\r\n            \r\n            let localColors = {};\r\n            Object.keys(data[\"sell\"]).forEach( (lable) => {\r\n                let r = Math.floor(Math.random()*255);\r\n                let g = Math.floor(Math.random()*255);\r\n                let b = Math.floor(Math.random()*255);\r\n\r\n                let r1 = Math.floor(Math.random()*255);\r\n                let g1 = Math.floor(Math.random()*255);\r\n                let b1 = Math.floor(Math.random()*255);\r\n\r\n                localColors[lable] = {r,g,b,r1,g1,b1}\r\n            });\r\n\r\n            const localData = [];\r\n            Object.keys(data[\"sell\"]).forEach( name => {\r\n                localData.push({\r\n                    option_symbol: data[\"sell\"][name].table[0][0],\r\n                    invex_ration: Number(data[\"sell\"][name].table[0][1]).toPrecision(),\r\n                    date_of_expiration: data[\"sell\"][name].table[0][2],\r\n                    type: data[\"sell\"][name].table[0][3],\r\n                    last_percentage_change: data[\"sell\"][name].table[0][4],\r\n                    action: (\r\n                        <button\r\n                            className='btn btn-outline-success'\r\n                            onClick={() => {\r\n                                setShowChart(true);\r\n                                setChartLables(data[filterCompanyType][name].expiration);\r\n                                setDataSets([\r\n                                    {\r\n                                        label: name,\r\n                                        data: data[filterCompanyType][name].mid,\r\n                                        borderColor: \"rgb(\"+localColors[name].r+\",\"+localColors[name].g+\",\"+localColors[name].b+\")\",\r\n                                        backgroundColor: \"rgba(\" + localColors[name].r + \",\" + localColors[name].g + \",\" + localColors[name].b + \", 0.5)\",\r\n                                        yAxisID: 'y'\r\n                                    },\r\n                                    {\r\n                                        label: name + \" Change %\",\r\n                                        data: data[filterCompanyType][name].mid_change,\r\n                                        borderColor: \"rgb(\"+localColors[name].r1+\",\"+localColors[name].g1+\",\"+localColors[name].b1+\")\",\r\n                                        backgroundColor: \"rgba(\" + localColors[name].r1 + \",\" + localColors[name].g1 + \",\" + localColors[name].b1 + \", 0.5)\",\r\n                                        yAxisID: 'y1'\r\n                                    }\r\n                                ]);\r\n                            }}\r\n                        >\r\n                            <i className='fa fa-arrow-right' aria-hidden='true'></i>\r\n                        </button>\r\n                    )\r\n                })\r\n            });\r\n            setCompanieData(localData);\r\n\r\n            setGraphData(data);\r\n            setCircularProgress(false);\r\n        })\r\n        .catch(err => {\r\n            alert(\"Some Error Occured !\");\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    const handleDataTypeChange = (e) => {\r\n        const newValue = e.target.value;\r\n\r\n        setFilterCompanyType(newValue);\r\n\r\n        let localColors = {};\r\n        Object.keys(graphData[newValue]).forEach( (lable) => {\r\n            let r = Math.floor(Math.random()*255);\r\n            let g = Math.floor(Math.random()*255);\r\n            let b = Math.floor(Math.random()*255);\r\n            \r\n            let r1 = Math.floor(Math.random()*255);\r\n            let g1 = Math.floor(Math.random()*255);\r\n            let b1 = Math.floor(Math.random()*255);\r\n\r\n            localColors[lable] = {r,g,b,r1,g1,b1}\r\n        });\r\n\r\n        const localData = [];\r\n        Object.keys(graphData[newValue]).forEach( name => {\r\n            localData.push({\r\n                option_symbol: graphData[newValue][name].table[0][0],\r\n                invex_ration: graphData[newValue][name].table[0][1],\r\n                date_of_expiration: graphData[newValue][name].table[0][2],\r\n                type: graphData[newValue][name].table[0][3],\r\n                last_percentage_change: graphData[newValue][name].table[0][4],\r\n                action: (\r\n                    <button\r\n                        className='btn btn-outline-success'\r\n                        onClick={() => {\r\n                            setShowChart(true);\r\n                            setChartLables(graphData[newValue][name].expiration);\r\n                            setDataSets([\r\n                                {\r\n                                    label: name,\r\n                                    data: graphData[newValue][name].mid,\r\n                                    borderColor: \"rgb(\"+localColors[name].r+\",\"+localColors[name].g+\",\"+localColors[name].b+\")\",\r\n                                    backgroundColor: \"rgba(\" + localColors[name].r + \",\" + localColors[name].g + \",\" + localColors[name].b + \", 0.5)\",\r\n                                    yAxisID: 'y'\r\n                                },\r\n                                {\r\n                                    label: name + \" Change %\",\r\n                                    data: graphData[newValue][name].mid_change,\r\n                                    borderColor: \"rgb(\"+localColors[name].r1+\",\"+localColors[name].g1+\",\"+localColors[name].b1+\")\",\r\n                                    backgroundColor: \"rgba(\" + localColors[name].r1 + \",\" + localColors[name].g1 + \",\" + localColors[name].b1 + \", 0.5)\",\r\n                                    yAxisID: 'y1'\r\n                                }\r\n                            ]);\r\n                        }}\r\n                    >\r\n                        <i className='fa fa-arrow-right' aria-hidden='true'></i>\r\n                    </button>\r\n                )\r\n            })\r\n        });\r\n        setCompanieData(localData);\r\n\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setShowChart(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container' style={{padding: \"50px 0 50px\"}}>\r\n                <div className='offset-0 col-12'>\r\n                    <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-column flex-wrap align-items-center w-100 p-4'>\r\n                        <Box sx={{ width: 150 }} className='mx-2 mb-4'>\r\n                            <p className='my-auto mx-2 fw-bolder'>Data Type</p>\r\n                            <TextField\r\n                                value={filterCompanyType}\r\n                                onChange={handleDataTypeChange}\r\n                                select\r\n                                sx={{marginTop:1, padding:0, width:\"100%\"}}\r\n                            >\r\n                                    <MenuItem value=\"sell\">Sell</MenuItem>\r\n                                    <MenuItem value=\"buy\">Buy</MenuItem>\r\n                            </TextField>\r\n                        </Box>\r\n                        \r\n                        <ThemeProvider theme={theme}>\r\n                            <MUIDataTable\r\n                                data={companieData}\r\n                                columns={columns}\r\n                                options={{ selectableRows: false }}\r\n                                className='my-2'\r\n                            />\r\n                        </ThemeProvider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                open={showChart} aria-labelledby='modal-modal-title'\r\n                aria-describedby='modal-modal-description' style={{ overflow: 'scroll' }}\r\n            >\r\n            <div>\r\n                <Box sx={{ ...style, width: 800 }}>\r\n                    <div className='text-end' style={{ cursor: 'pointer' }}>\r\n                        <i className='fas fa-times' onClick={handleCloseModal}></i>\r\n                    </div>\r\n\r\n                        <CustomChartMAxis\r\n                            chartLables={chartLables} \r\n                            dataSets={dataSets}\r\n                        />\r\n\r\n                    <div>\r\n                        <button onClick={handleCloseModal} className='mt-2 btn btn-danger'> Close </button>\r\n                    </div>\r\n                </Box>\r\n            </div>\r\n            </Modal>\r\n            <Dialog\r\n               open={circularProgress}\r\n               aria-labelledby=\"alert-dialog-title\"\r\n               aria-describedby=\"alert-dialog-description\"\r\n               PaperProps={{\r\n                  style: {\r\n                        backgroundColor: 'transparent',\r\n                        boxShadow: 'none',\r\n                  },\r\n               }}\r\n            >\r\n               <Box sx={{padding:1, background:\"transparent\", display:\"flex\"}}>\r\n                  <CircularProgress sx={{color:\"white\", margin:\"0 auto \"}} /> \r\n               </Box>     \r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TableGraph;\r\n","import React, { useState } from 'react'\r\nimport { \r\n        Box, MenuItem, \r\n        ButtonGroup, Select, \r\n        InputAdornment, OutlinedInput, \r\n        Button, FormControl,\r\n        Snackbar, Alert, Grow,\r\n        List, ListItem, ListItemText,\r\n        Divider, Typography,\r\n        Backdrop, CircularProgress,\r\n        TableContainer, Table, TableHead,\r\n        TableRow, TableCell, TableBody\r\n} from '@mui/material'\r\n\r\nimport axios from \"axios\";\r\nconst PredictData = () => {\r\n\r\n    const [ticker, setTicker] = useState(\"\");\r\n    const [percentage, setPercentage] = useState(0);\r\n    const [filterDays, setFilterDays] = useState(\"180\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openBackDrop, setOpenBackDrop] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"Something went wrong\");\r\n\r\n    const [predictData, setPredictData] = useState({});\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n    const [timePeriod, setTimePeriod] = useState(\"5\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(ticker===\"\"){\r\n            setErrMsg(\"Please Fill Picker Field!\");\r\n            setOpen(true);\r\n        }\r\n        else if(percentage<0 || percentage>100){\r\n            setErrMsg(\"Percentage Should between 0-100!\");\r\n            setOpen(true);\r\n        }\r\n        else{\r\n            setOpenBackDrop(true);\r\n            axios.post(\r\n                process.env.REACT_APP_BASE_URL+\"/predict_price\", \r\n                {\r\n                    \"ticker\": ticker,\r\n                    \"filter_days\": filterDays,\r\n                    \"percentage\": percentage\r\n                }\r\n            ).then(response => {\r\n                console.log(response);\r\n                setPredictData(response.data);\r\n                setDataLoaded(true);\r\n                setOpenBackDrop(false);\r\n            })\r\n            .catch(e => {\r\n                console.log(e.response);\r\n                setErrMsg(\"Something went wrong!\");\r\n                setOpen(true);\r\n                setOpenBackDrop(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const selected = {\r\n        color:\"white\", backgroundColor:\"#0F062B\",\r\n        '&:hover':{ color:\"white\", backgroundColor:\"#0F062B\" }\r\n    }\r\n\r\n    const unSelected = { \r\n        '&:hover':{ color:\"white\", backgroundColor:\"#0F062B\" } \r\n    }\r\n\r\n    const changeFloat = (data) => {\r\n        return parseFloat(data).toFixed(2)\r\n    }\r\n\r\n    return (\r\n        <div className='container' style={{padding: \"50px 0 0\"}}>\r\n            <div className='offset-0 col-12'>\r\n                <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap w-100 p-4'>\r\n                    <Box className='my-2 mx-2 '>\r\n                        <p className='mb-1 my-auto mx-2 fw-bolder'>Ticker</p>\r\n                        {/* <input\r\n                            type='text'\r\n                            value={ticker}\r\n                            onChange={(e) => setTicker(e.target.value)}\r\n                            className='mx-2 form-control my-auto '\r\n                        /> */}\r\n                        \r\n                        <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\r\n                            <OutlinedInput\r\n                                value={ticker}\r\n                                onChange={(e) => setTicker(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box className='my-2 mx-2 '>\r\n                        <p className='my-auto mx-2 fw-bolder'>Filter Days</p>\r\n                        <Select\r\n                            value={filterDays}\r\n                            label=\"Age\"\r\n                            onChange={(e) => setFilterDays(e.target.value)}\r\n                            sx={{marginTop:1, marginLeft:1, padding:0}}\r\n                        >\r\n                            <MenuItem value={180}>6 Months</MenuItem>\r\n                            <MenuItem value={360}>1 Years</MenuItem>\r\n                            <MenuItem value={720}>2 Year</MenuItem>\r\n                            <MenuItem value={1800}>5 Year</MenuItem>\r\n                        </Select>\r\n                    </Box>\r\n                    <Box className='my-2 mx-2 '>\r\n                        <p className='mb-1 my-auto mx-2 fw-bolder'>Percentage</p>\r\n                        {/* <input\r\n                            type='number'\r\n                            min={0}\r\n                            max={100}\r\n                            value={percentage}\r\n                            onChange={(e) => setPercentage(e.target.value)}\r\n                            className='mx-2 form-control my-auto '\r\n                        /> */}\r\n                        {/* <TextField \r\n                            type=\"number\"\r\n                            InputProps={{\r\n                                inputProps: { \r\n                                    max: 100, min: 10 \r\n                                }\r\n                            }}\r\n                            fullWidth\r\n                            size=\"small\"\r\n                        /> */}\r\n                        <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\r\n                            <OutlinedInput\r\n                                type=\"number\"\r\n                                value={percentage}\r\n                                onChange={(e) => setPercentage(e.target.value)}\r\n                                endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n                                inputProps = { { max: 100, min: 0 } }\r\n                            />\r\n                        </FormControl>\r\n                    </Box>\r\n                    \r\n                    <button\r\n                        className='ml-3 px-4 my_button my-auto w-auto'\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4 mt-4 mb-2'>\r\n                    <ButtonGroup orientation=\"vertical\" color=\"inherit\" disableRipple sx={{ color:\"#0F062B\", borderColor:\"#0F062B\" }} >\r\n                        <Button \r\n                            sx={timePeriod===\"5\"?selected:unSelected} \r\n                            onClick={() => setTimePeriod(\"5\")}\r\n                        >\r\n                            Weekly\r\n                        </Button>\r\n                        <Button \r\n                            sx={timePeriod===\"10\"?selected:unSelected}  \r\n                            onClick={() => setTimePeriod(\"10\")}\r\n                        >\r\n                            Semi-Monthly\r\n                        </Button>\r\n                        <Button \r\n                            sx={timePeriod===\"20\"?selected:unSelected}  \r\n                            onClick={() => setTimePeriod(\"20\")}\r\n                        >\r\n                            Monthly\r\n                        </Button>\r\n                        <Button \r\n                            sx={timePeriod===\"60\"?selected:unSelected}  \r\n                            onClick={() => setTimePeriod(\"60\")}\r\n                        >\r\n                            Quaterly\r\n                        </Button>\r\n                    </ButtonGroup>\r\n\r\n                    {\r\n                        dataLoaded\r\n                        ?   <List\r\n                                sx={{\r\n                                    width: '100%',\r\n                                    maxWidth: 650,\r\n                                    bgcolor: 'background.paper',\r\n                                    border: \"1px solid #0F062B\",\r\n                                    borderRadius: \"5px\",\r\n                                    marginTop:\"1rem\",\r\n                                }}\r\n                            >\r\n                                <ListItem>\r\n                                    <ListItemText \r\n                                        primary=\"O to H Volatility\" \r\n                                        secondary={ changeFloat(predictData[timePeriod][\"O to H\"]) + \"%\"} \r\n                                    />\r\n                                    <Divider orientation=\"vertical\" variant=\"middle\" flexItem />\r\n                                    <ListItemText \r\n                                        primary=\"O to L Volatility\" \r\n                                        secondary={ changeFloat(predictData[timePeriod][\"O to L\"]) + \"%\"} \r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText \r\n                                        primary=\"Predicted High\" \r\n                                        secondary={changeFloat(predictData[timePeriod][\"predicted_high\"])} />\r\n                                    <ListItemText \r\n                                        primary=\"Predicted Low\" \r\n                                        secondary={changeFloat(predictData[timePeriod][\"predicted_low\"])} />\r\n                                </ListItem>\r\n\r\n                                <Divider />\r\n                                \r\n                                <ListItem style={{flexWrap:\"wrap\"}}>\r\n                                    <div style={{flex: \"1 1 auto\", marginRight:\"2em\"}}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\" colSpan={2}> 1st SD </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"first_percent\"][0])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"first\"][0])} </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"first_percent\"][1])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"first\"][1])} </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                    <div style={{flex: \"1 1 auto\", marginRight:\"2em\"}}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\" colSpan={2}> 2nd SD </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"second_percent\"][0])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"second\"][0])} </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"second_percent\"][1])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"second\"][1])} </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                    <div style={{flex: \"1 1 auto\"}}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\" colSpan={2}> 3rd SD </TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"third_percent\"][0])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"third\"][0])} </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"third_percent\"][1])}% </TableCell>\r\n                                                    <TableCell align=\"center\"> {changeFloat(predictData[timePeriod][\"third\"][1])} </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </ListItem>\r\n                            </List>\r\n                        :   <div></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={openBackDrop}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            \r\n            <Snackbar \r\n                open={open} \r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }} \r\n                autoHideDuration={2000} \r\n                onClose={handleClose}\r\n                TransitionComponent={ Grow }\r\n            >\r\n                <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {errMsg}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PredictData","import './App.css'\r\nimport CallsAndPuts2 from './components/CallsAndPuts2/index'\r\nimport InvexAppBar from './components/InvexAppBar/InvexAppBar'\r\n\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport Graph from './components/Graph/Graph'\r\nimport TableGraph from './components/TableGraph/TableGraph'\r\nimport PredictData from './components/PredictData/PredictData'\r\n \r\nfunction App () {\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <InvexAppBar />\r\n        <Routes>\r\n          <Route exact path='/' element={<CallsAndPuts2 />} />\r\n          <Route path=\"/graph\" element={<TableGraph />} />\r\n          <Route path=\"/comp-graph\" element={<Graph />} />\r\n          <Route path=\"/predict-data\" element={<PredictData />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}