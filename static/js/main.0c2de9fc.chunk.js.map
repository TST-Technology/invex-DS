{"version":3,"sources":["components/CallsAndPuts2/MainTable.js","components/CallsAndPuts2/Controls.js","components/CallsAndPuts2/MoreInfo.js","components/CallsAndPuts2/index.js","assets/logo.svg","components/InvexAppBar/InvexAppBar.js","components/Graph/CustomChart.js","components/Graph/Graph.js","App.js","reportWebVitals.js","index.js"],"names":["MainTable","companies","columns","theme","createTheme","responsiveFontSizes","ThemeProvider","data","options","selectableRows","className","Controls","handleSubmit","useState","Date","toISOString","substring","date","setDate","monthInput","setMonthInput","strikeInput","setStrikeInput","callRange","setCallRange","putRange","setputRange","CPRange","setCPRange","filterDays","setFilterDays","handleCallRangeChange","value","handlePutRangeChange","handleCPRangeChange","Fragment","style","overflow","type","onChange","e","target","width","htmlFor","Slider","sx","color","min","max","id","Box","step","Select","labelId","label","marginTop","padding","MenuItem","onClick","position","top","left","transform","bgcolor","boxShadow","p","MoreInfo","showMoreDetails","handleCloseModal","Modal","open","show","class","cursor","Typography","variant","component","scope","Object","entries","map","key","toFixed","name","Index","setCompanies","isDataLoaded","setDataLoaded","loading","setLoading","setShowMoreDetails","handleShowMore","getData","body","a","fetch","method","headers","res","console","log","text","json","replace","jsonOP","JSON","parse","op","value2","push","company_name","call_ir","Number","put_ir","cp_ratio","hvtf","action","createPortal","document","getElementById","role","InvexAppBar","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","AppBar","Container","backgroundColor","maxWidth","Toolbar","disableGutters","noWrap","mr","display","xs","md","src","logo","alt","flexGrow","IconButton","size","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","to","textAlign","Button","my","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","CustomChart","labels","chartLables","datasets","dataSets","justifyContent","responsive","plugins","legend","title","scales","y","gridlines","x","ticks","autoSkip","maxRotation","minRotation","Graph","useTheme","filterCompanyType","setFilterCompanyType","defSelected","selectedCompanyName","setSelectedCompanyName","graphData","setGraphData","companyNameData","setCompanyNameData","graphMidData","setGraphMidData","colors","setColors","setChartLables","setDataSets","getStyles","comName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useEffect","axios","get","then","response","localColors","keys","heading","forEach","lable","r","Math","floor","random","g","b","mid","dates","catch","err","alert","lables","n","length","localDataSet","i","borderColor","TextField","select","FormControl","m","InputLabel","split","multiple","input","OutlinedInput","renderValue","selected","flexWrap","gap","Chip","MenuProps","PaperProps","maxHeight","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c2de9fc.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from '@mui/material'\r\nimport { ThemeProvider } from '@mui/styles'\r\nimport MUIDataTable from 'mui-datatables'\r\nimport React from 'react'\r\n\r\nfunction MainTable ({ companies, columns }) {\r\n  let theme = createTheme()\r\n  theme = responsiveFontSizes(theme)\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <MUIDataTable\r\n        data={companies}\r\n        columns={columns}\r\n        options={{ selectableRows: false }}\r\n        className='my-2'\r\n      />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default MainTable\r\n","import { Box, Slider, Select, MenuItem } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Controls ({ handleSubmit }) {\r\n  const [date, setDate] = useState(\r\n    new Date(2021,11,14).toISOString().substring(0, 10)\r\n  )\r\n  const [monthInput, setMonthInput] = useState(100)\r\n  const [strikeInput, setStrikeInput] = useState(20)\r\n  const [callRange, setCallRange] = useState([0.5, 20])\r\n  const [putRange, setputRange] = useState([0.5, 50])\r\n  const [CPRange, setCPRange] = useState([0.5, 20])\r\n  const [filterDays, setFilterDays] = useState(\"180\");\r\n\r\n  const handleExpiration = e => {\r\n    setMonthInput(e.target.value)\r\n  }\r\n\r\n  const handleStrikeChange = e => {\r\n    setStrikeInput(e.target.value)\r\n  }\r\n\r\n  const handleDateChange = e => {\r\n    setDate(e.target.value)\r\n  }\r\n\r\n  const handleCallRangeChange = value => {\r\n    setCallRange(value)\r\n  }\r\n  \r\n  const handlePutRangeChange = value => {\r\n    setputRange(value)\r\n  }\r\n\r\n  const handleCPRangeChange = value => {\r\n    setCPRange(value)\r\n  }\r\n\r\n  const handleFilterDaysChange = e => {\r\n    setFilterDays(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className='card flex-wrap d-flex flex-row justify-content-between my-2'\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <div className=' card d-flex flex-row flex-wrap align-items-center justify-content-between w-100 p-4'>\r\n          <p className='my-auto fw-bolder'>Expiration</p>\r\n          <input\r\n            type='number'\r\n            value={monthInput}\r\n            onChange={handleExpiration}\r\n            className='mx-2 form-control my-auto '\r\n            style={{ width: '100px' }}\r\n          />\r\n          <p className='my-auto mx-2 fw-bolder'>Strike</p>\r\n          <div className='d-flex flex-column align-items-start p-3'>\r\n            <label htmlFor='myinputRange' className='form-label mx-2 my-0 mt-2'>\r\n              {strikeInput}\r\n            </label>\r\n            <Slider\r\n              aria-label='Strike'\r\n              value={strikeInput}\r\n              onChange={handleStrikeChange}\r\n              sx={{\r\n                color: '#0f062b'\r\n              }}\r\n              min={0}\r\n              max={100}\r\n              id='myinputRange'\r\n              style={{ width: '100px' }}\r\n            />\r\n          </div>\r\n          <p className='my-auto mx-2 fw-bolder'>Date</p>\r\n          <input\r\n            type='date'\r\n            className='mx-2 form-control my-auto w-auto'\r\n            value={date}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className='flex-wrap d-flex flex-row justify-content-between my-2 card'\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <div className=' card d-flex flex-row flex-wrap align-items-center justify-content-between w-100 p-4'>\r\n          <Box sx={{ width: 150 }} className='mx-2 '>\r\n            <p className='mx-2 my-auto fw-bolder'>Call Range</p>\r\n            <div className='d-flex flex-row my-1 justify-content-center'>\r\n              <div className='d-flex flex-column  mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={callRange[0]}\r\n                  onChange={e => {\r\n                    handleCallRangeChange([e.target.value, callRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column  mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={callRange[1]}\r\n                  onChange={e => {\r\n                    handleCallRangeChange([callRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2'>\r\n            <p className='my-auto mx-2 fw-bolder'>Put Range</p>\r\n            <div className='d-flex flex-row my-1'>\r\n              <div className='d-flex flex-column align-items-start mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={putRange[0]}\r\n                  onChange={e => {\r\n                    handlePutRangeChange([e.target.value, putRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column align-items-start mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={putRange[1]}\r\n                  onChange={e => {\r\n                    handlePutRangeChange([putRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2'>\r\n            <p className='my-auto mx-2 fw-bolder'>CP Range</p>\r\n            <div className='d-flex flex-row my-1'>\r\n              <div className='d-flex flex-column align-items-start mx-1 '>\r\n                <label>From</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={CPRange[0]}\r\n                  onChange={e => {\r\n                    handleCPRangeChange([e.target.value, CPRange[1]])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-flex flex-column align-items-start mx-1'>\r\n                <label>To</label>\r\n                <input\r\n                  type='number'\r\n                  min={0}\r\n                  step={0.5}\r\n                  className='form-control '\r\n                  value={CPRange[1]}\r\n                  onChange={e => {\r\n                    handleCPRangeChange([CPRange[0], e.target.value])\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Box>\r\n\r\n          <Box sx={{ width: 150 }} className='mx-2 '>\r\n            <p className='my-auto mx-2 fw-bolder'>Filter Days</p>\r\n            {/* <InputLabel id=\"demo-simple-select-label\">Filter Days</InputLabel> */}\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={filterDays}\r\n              label=\"Age\"\r\n              onChange={handleFilterDaysChange}\r\n              sx={{marginTop:1, padding:0}}\r\n            >\r\n              <MenuItem value={\"180\"}>6 Months</MenuItem>\r\n              <MenuItem value={\"720\"}>2 Years</MenuItem>\r\n              <MenuItem value={\"max\"}>MAX</MenuItem>\r\n            </Select>\r\n          </Box>\r\n\r\n          <button\r\n            className='my_button my-auto w-auto'\r\n            onClick={() => {\r\n              handleSubmit(\r\n                `{\r\n                  \"month\":\"${monthInput}\",\r\n                  \"strike_percent\":\"${strikeInput}\",\r\n                  \"date\":\"${date}\",\r\n                  \"call_value\":\"${callRange[0]}_${callRange[1]}\",\r\n                  \"put_value\":\"${putRange[0]}_${putRange[1]}\",\r\n                  \"cp_value\":\"${CPRange[0]}_${CPRange[1]}\",\r\n                  \"filter_days\":\"${filterDays}\"\r\n                }`\r\n              )\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import { Modal, Typography, Box } from '@mui/material'\r\nimport React from 'react'\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4\r\n}\r\nfunction MoreInfo ({ showMoreDetails, handleCloseModal }) {\r\n  return (\r\n    <Modal\r\n      open={showMoreDetails.show}\r\n      aria-labelledby='modal-modal-title'\r\n      aria-describedby='modal-modal-description'\r\n      style={{ overflow: 'scroll' }}\r\n    >\r\n      <div>\r\n        <Box sx={{ ...style, width: 800 }}>\r\n          <div class='text-end' style={{ cursor: 'pointer' }}>\r\n            <i class='fas fa-times' onClick={handleCloseModal}></i>\r\n          </div>\r\n          <Typography id='modal-modal-title' variant='h6' component='h2'>\r\n            {`${showMoreDetails.data['key']}`}\r\n          </Typography>\r\n          <div class='table-responsive shadow-lg p-3 my-3'>\r\n            <table class='table'>\r\n              <thead>\r\n                <tr>\r\n                  <td scope='col'>Expiration Date</td>\r\n                  <td scope='col'>Call IR</td>\r\n                  <td scope='col'>Put IR</td>\r\n                  <td scope='col'>CP Ratio</td>\r\n                  <td scope='col'>HVTF</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {Object.entries(showMoreDetails.data['value']).map(\r\n                  ([key, value]) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{key}</td>\r\n                        <td>{value[0].toFixed(2)}</td>\r\n                        <td>{value[1].toFixed(2)}</td>\r\n                        <td>{value[2].toFixed(2)}</td>\r\n                        <td>{value[3].toFixed(2)}</td>\r\n                      </tr>\r\n                    )\r\n                  }\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div>\r\n            <button onClick={handleCloseModal} class='btn btn-danger'>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MoreInfo\r\n","import React, { useState } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport \"./index.css\"\r\nimport MainTable from './MainTable'\r\nimport Controls from './Controls'\r\nimport MoreInfo from './MoreInfo'\r\n\r\nconst columns = [\r\n  { name: 'company_name', label: 'Company name' },\r\n  { name: 'call_ir', label: 'Call IR' },\r\n  { name: 'put_ir', label: 'Put IR' },\r\n  { name: 'cp_ratio', label: 'CP ratio' },\r\n  { name: 'hvtf', label: 'HVTF' },\r\n  { name: 'action', label: 'See More' }\r\n]\r\n\r\nfunction Index () {\r\n  const [companies, setCompanies] = useState([])\r\n  const [isDataLoaded, setDataLoaded] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [showMoreDetails, setShowMoreDetails] = useState({\r\n    show: false,\r\n    data: {}\r\n  })\r\n\r\n  const handleShowMore = (key, value) => {\r\n    setShowMoreDetails({ show: true, data: { key: key, value: { ...value } } })\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setShowMoreDetails({\r\n      show: false,\r\n      data: {}\r\n    })\r\n  }\r\n\r\n  const handleSubmit = body => {\r\n    getData(body)\r\n  }\r\n\r\n  const getData = async body => {\r\n    try {\r\n      setLoading(true)\r\n      setDataLoaded(true)\r\n\r\n      const res = await fetch(`https://dharm.ga/hello/total`, {\r\n        method: 'POST',\r\n        body: body,\r\n\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      console.log(body)\r\n      let json = await res.text()\r\n      json = json.replace(/\\bNaN\\b/g, null)\r\n      json = json.replace(/\\bInfinity\\b/g, null)\r\n      console.log('Output: ', json)\r\n      let jsonOP = JSON.parse(json)\r\n      let op = []\r\n      Object.entries(jsonOP).map(([key, value]) => {\r\n        let value2 = value['total']\r\n        op.push({\r\n          company_name: key,\r\n          call_ir: value2[0] ? Number(value2[0].toFixed(2)) : '-',\r\n          put_ir: value2[1] ? Number(value2[1].toFixed(2)) : '-',\r\n          cp_ratio: value2[2] ? Number(value2[2].toFixed(2)) : '-',\r\n          hvtf: value2[3] ? Number(value2[3].toFixed(2)) : '-',\r\n          action: (\r\n            <button\r\n              class='btn btn-outline-success'\r\n              onClick={() => {\r\n                handleShowMore(key, value)\r\n              }}\r\n            >\r\n              <i class='fa fa-arrow-right' aria-hidden='true'></i>\r\n            </button>\r\n          )\r\n        })\r\n        return ''\r\n      })\r\n      setCompanies(op)\r\n    } catch (e) {\r\n      console.log(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='main'>\r\n      <section className='company_details'>\r\n        <div className='container'>\r\n          <div className='row'>\r\n            {showMoreDetails.show\r\n              ? createPortal(\r\n                  <MoreInfo\r\n                    showMoreDetails={showMoreDetails}\r\n                    handleCloseModal={handleCloseModal}\r\n                  />,\r\n                  document.getElementById('loading_modal')\r\n                )\r\n              : null}\r\n\r\n            <div className='col-12'>\r\n              <Controls handleSubmit={handleSubmit} />\r\n              {loading ? (\r\n                <div class='d-flex justify-content-center align-items-center'>\r\n                  <div class='spinner-border text-primary' role='status'>\r\n                    <span class='visually-hidden'>Loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : isDataLoaded != 0 ? (\r\n                <MainTable companies={companies} columns={columns} />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","export default __webpack_public_path__ + \"static/media/logo.e1690405.svg\";","import * as React from 'react';\r\nimport \"./InvexAppBar.css\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst InvexAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container sx={{backgroundColor:\"#0f062b\"}} maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            <img src={logo} alt=\"Invex Wealth\" />\r\n          </Typography>\r\n          \r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              <Link to=\"/\">\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Home</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n              <Link to=\"/graph\">\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">Graph</Typography>\r\n                </MenuItem>\r\n              </Link>\r\n            </Menu>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            <img src={logo} alt=\"Invex Wealth\" />\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <Link to=\"/\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Home\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/graph\">\r\n              <Button\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                Graph\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n\r\n          {/* <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box> */}\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default InvexAppBar;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst CustomChart = ({chartLables, dataSets}) => {\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Invex Chart',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n          gridlines: {\r\n            color: 'red'\r\n          },\r\n      },\r\n      x: {\r\n          ticks: {\r\n              autoSkip: false,\r\n              maxRotation: 90,\r\n              minRotation: 0\r\n          }\r\n      },\r\n    }\r\n  };\r\n\r\n  // console.log(chartLables);\r\n  // console.log(dataSets);\r\n\r\n  const data = {\r\n    labels:chartLables,\r\n    datasets: dataSets,\r\n  };\r\n\r\n  return (\r\n    <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4 mt-4 mb-2'>\r\n      <Line options={options} data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Box, MenuItem, TextField, Select, useTheme, OutlinedInput, Chip, FormControl, InputLabel } from '@mui/material'\r\nimport axios from 'axios';\r\nimport CustomChart from './CustomChart';\r\n\r\n\r\nconst Graph = () => {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [filterCompanyType, setFilterCompanyType] = useState(\"lower_data\");\r\n\r\n    const defSelected = \"All\"\r\n    const [selectedCompanyName, setSelectedCompanyName] = useState([defSelected]);\r\n    \r\n    const [graphData, setGraphData] = useState({});\r\n    const [companyNameData, setCompanyNameData] = useState([]);\r\n    const [graphMidData, setGraphMidData] = useState({});\r\n    const [colors, setColors] = useState([]);\r\n    \r\n    const [chartLables, setChartLables] = useState([]);\r\n    const [dataSets, setDataSets] = useState([]);\r\n\r\n    const MenuProps = {\r\n        PaperProps: {\r\n          style: {\r\n            maxHeight: 48 * 4.5 + 8,\r\n            width: 250,\r\n            fontWeight: \"bold\"\r\n          },\r\n        },\r\n    };\r\n\r\n    function getStyles(name, comName, theme) {\r\n        return {\r\n            fontWeight:\r\n            comName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://dharm.ga/hello/graph\")\r\n        .then(response => {\r\n            const data = response.data;\r\n            \r\n            let localColors = {};\r\n            Object.keys(data[\"lower_data\"].heading).forEach( (lable) => {\r\n                let r = Math.floor(Math.random()*255);\r\n                let g = Math.floor(Math.random()*255);\r\n                let b = Math.floor(Math.random()*255);\r\n                localColors[lable] = {r,g,b}\r\n            });\r\n            setColors(localColors);\r\n\r\n            setCompanyNameData(Object.keys(data[\"lower_data\"].heading));\r\n            setGraphMidData(data[\"lower_data\"].mid);\r\n            setChartLables(data[\"lower_data\"].dates);\r\n            setGraphData(data);\r\n        })\r\n        .catch(err => {\r\n            alert(\"Some Error Occured !\");\r\n            console.log(err);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let lables = companyNameData;\r\n        let n = lables.length;\r\n        let localDataSet = [];\r\n        if(selectedCompanyName.indexOf(defSelected)!==-1){\r\n            for(let i=0; i<n; i++){\r\n                localDataSet.push({\r\n                    label: lables[i],\r\n                    data: graphMidData[lables[i]],\r\n                    borderColor: \"rgb(\"+colors[lables[i]].r+\",\"+colors[lables[i]].g+\",\"+colors[lables[i]].b+\")\",\r\n                    backgroundColor: \"rgba(\" + colors[lables[i]].r + \",\" + colors[lables[i]].g + \",\" + colors[lables[i]].b + \", 0.5)\"\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            selectedCompanyName.forEach( (comName)=>{\r\n                localDataSet.push({\r\n                    label: comName,\r\n                    data: graphMidData[comName],\r\n                    borderColor: \"rgb(\"+colors[comName].r+\",\"+colors[comName].g+\",\"+colors[comName].b+\")\",\r\n                    backgroundColor: \"rgba(\" + colors[comName].r + \",\" + colors[comName].g + \",\" + colors[comName].b + \", 0.5)\"\r\n                })\r\n            });\r\n        }\r\n        setDataSets(localDataSet);\r\n    }, [colors, companyNameData, graphMidData, selectedCompanyName, filterCompanyType]);\r\n    \r\n    const handleDataTypeChange = (e) => {\r\n        setFilterCompanyType(e.target.value);\r\n        setSelectedCompanyName([defSelected]);\r\n\r\n        let localColors = {};\r\n        Object.keys(graphData[e.target.value].heading).forEach( (lable) => {\r\n            let r = Math.floor(Math.random()*255);\r\n            let g = Math.floor(Math.random()*255);\r\n            let b = Math.floor(Math.random()*255);\r\n            localColors[lable] = {r,g,b}\r\n        });\r\n        setColors(localColors);\r\n\r\n        setCompanyNameData(Object.keys(graphData[e.target.value].heading));\r\n        setGraphMidData(graphData[e.target.value].mid);\r\n        setChartLables(graphData[e.target.value].dates);\r\n    }\r\n\r\n    const handleNameChange = (e) => {\r\n        const {\r\n            target: { value },\r\n        } = e;\r\n        setSelectedCompanyName(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='container' style={{padding: \"50px 0 0\"}}>\r\n            <div className='offset-0 col-12'>\r\n                <div style={{justifyContent:\"space-around\"}} className=' card d-flex flex-row flex-wrap align-items-center w-100 p-4'>\r\n                    <Box sx={{ width: 150 }} className='mx-2 '>\r\n                        <p className='my-auto mx-2 fw-bolder'>Data Type</p>\r\n                        <TextField\r\n                            value={filterCompanyType}\r\n                            onChange={handleDataTypeChange}\r\n                            select\r\n                            sx={{marginTop:1, padding:0, width:\"100%\"}}\r\n                        >\r\n                                <MenuItem value=\"lower_data\">Lower Data</MenuItem>\r\n                                <MenuItem value=\"upper_data\">Upper Data</MenuItem>\r\n                        </TextField>\r\n                    </Box>\r\n\r\n                    <Box className='mx-2 '>\r\n                        <p className='my-auto mx-2 fw-bolder'>Company Name</p>\r\n                        <FormControl sx={{ m: 1, width: 400 }}>\r\n                            <InputLabel id=\"company\">Company</InputLabel>\r\n                            <Select\r\n                                labelId=\"company\"\r\n                                value={selectedCompanyName}\r\n                                onChange={handleNameChange}\r\n                                multiple\r\n                                input={<OutlinedInput id=\"company\" label=\"Company\" />}\r\n                                renderValue={(selected) => (\r\n                                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                        {selected.map((value) => (\r\n                                            <Chip key={value} label={value} />\r\n                                        ))}\r\n                                    </Box>\r\n                                )}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                <MenuItem\r\n                                    value={ defSelected }\r\n                                    style={getStyles(defSelected, selectedCompanyName, theme)}\r\n                                >\r\n                                    { defSelected }\r\n                                </MenuItem>\r\n                                {\r\n                                    companyNameData.map(name => {\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={name}\r\n                                                value={name}\r\n                                                style={getStyles(name, selectedCompanyName, theme)}\r\n                                            >\r\n                                                {name}\r\n                                            </MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n\r\n                    {/* <button\r\n                        className='my_button my-auto w-auto'\r\n                        onClick={() => alert(JSON.stringify({\"Data\": filterCompanyType, \"Company\": filterCompanyName}))}\r\n                    >\r\n                        Submit\r\n                    </button> */}\r\n                </div>\r\n            </div>\r\n            <CustomChart chartLables={chartLables} dataSets={dataSets} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n","import './App.css'\r\nimport CallsAndPuts2 from './components/CallsAndPuts2/index'\r\nimport InvexAppBar from './components/InvexAppBar/InvexAppBar'\r\n\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport Graph from './components/Graph/Graph'\r\n \r\nfunction App () {\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <InvexAppBar />\r\n        <Routes>\r\n          <Route exact path='/' element={<CallsAndPuts2 />} />\r\n          <Route path=\"/graph\" element={<Graph />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}